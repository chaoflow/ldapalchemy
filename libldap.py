from __future__ import absolute_import, division, print_function, unicode_literals

from cffi import FFI


ffi = FFI()
ffi.cdef("""
typedef ... LDAP;
typedef ... LDAPControl;

char *ldap_err2string(int err);
int ldap_get_option(LDAP *ld, int option, void *outvalue);
int ldap_initialize(LDAP **ldp, char *uri);
void ldap_memfree(void *p);
int ldap_set_option(LDAP *ld, int option, const void *invalue);
int ldap_simple_bind_s(LDAP *ld, const char *who, const char *passwd);
int ldap_start_tls_s(LDAP *ld, LDAPControl **serverctrls, LDAPControl **clientctrls);
int ldap_unbind(LDAP *ld);

#define LDAP_OPT_DEBUG_LEVEL ...
#define LDAP_OPT_DIAGNOSTIC_MESSAGE ...
#define LDAP_OPT_PROTOCOL_VERSION ...
#define LDAP_VERSION3 ...


/*
 * log levels from internal ldap_log.h, need to be also defined in ffi.verify()
 */
#define LDAP_DEBUG_TRACE ...
#define LDAP_DEBUG_PACKETS ...
#define LDAP_DEBUG_ARGS ...
#define LDAP_DEBUG_CONNS ...
#define LDAP_DEBUG_BER ...
#define LDAP_DEBUG_FILTER ...
#define LDAP_DEBUG_CONFIG ...
#define LDAP_DEBUG_ACL ...
#define LDAP_DEBUG_STATS ...
#define LDAP_DEBUG_STATS2 ...
#define LDAP_DEBUG_SHELL ...
#define LDAP_DEBUG_PARSE ...
#define LDAP_DEBUG_SYNC ...
#define LDAP_DEBUG_NONE ...
#define LDAP_DEBUG_ANY ...


/*
 * LDAP Result Codes
 */
#define LDAP_SUCCESS ...
#define LDAP_OPERATIONS_ERROR ...
#define LDAP_PROTOCOL_ERROR ...
#define LDAP_TIMELIMIT_EXCEEDED ...
#define LDAP_SIZELIMIT_EXCEEDED ...
#define LDAP_COMPARE_FALSE ...
#define LDAP_COMPARE_TRUE ...
#define LDAP_AUTH_METHOD_NOT_SUPPORTED ...
#define LDAP_STRONG_AUTH_REQUIRED ...
#define	LDAP_REFERRAL ...
#define LDAP_ADMINLIMIT_EXCEEDED ...
#define	LDAP_UNAVAILABLE_CRITICAL_EXTENSION ...
#define LDAP_CONFIDENTIALITY_REQUIRED ...
#define	LDAP_SASL_BIND_IN_PROGRESS ...

/* Attr Error */
#define LDAP_NO_SUCH_ATTRIBUTE ...
#define LDAP_UNDEFINED_TYPE ...
#define LDAP_INAPPROPRIATE_MATCHING ...
#define LDAP_CONSTRAINT_VIOLATION ...
#define LDAP_TYPE_OR_VALUE_EXISTS ...
#define LDAP_INVALID_SYNTAX ...

/* Name Error */
#define LDAP_NO_SUCH_OBJECT ...
#define LDAP_ALIAS_PROBLEM ...
#define LDAP_INVALID_DN_SYNTAX ...
#define LDAP_ALIAS_DEREF_PROBLEM ...

/* Security Error */
#define LDAP_X_PROXY_AUTHZ_FAILURE ...
#define LDAP_INAPPROPRIATE_AUTH ...
#define LDAP_INVALID_CREDENTIALS ...
#define LDAP_INSUFFICIENT_ACCESS ...

/* Service Error */
#define LDAP_BUSY ...
#define LDAP_UNAVAILABLE ...
#define LDAP_UNWILLING_TO_PERFORM ...
#define LDAP_LOOP_DETECT ...

/* Update Error */
#define LDAP_NAMING_VIOLATION ...
#define LDAP_OBJECT_CLASS_VIOLATION ...
#define LDAP_NOT_ALLOWED_ON_NONLEAF ...
#define LDAP_NOT_ALLOWED_ON_RDN ...
#define LDAP_ALREADY_EXISTS ...
#define LDAP_NO_OBJECT_CLASS_MODS ...
#define LDAP_RESULTS_TOO_LARGE ...
#define LDAP_AFFECTS_MULTIPLE_DSAS ...

/* API Error */
#define LDAP_SERVER_DOWN ...
#define LDAP_LOCAL_ERROR ...
#define LDAP_ENCODING_ERROR ...
#define LDAP_DECODING_ERROR ...
#define LDAP_TIMEOUT ...
#define LDAP_AUTH_UNKNOWN ...
#define LDAP_FILTER_ERROR ...
#define LDAP_USER_CANCELLED ...
#define LDAP_PARAM_ERROR ...
#define LDAP_NO_MEMORY ...
#define LDAP_CONNECT_ERROR ...
#define LDAP_NOT_SUPPORTED ...
#define LDAP_CONTROL_NOT_FOUND ...
#define LDAP_NO_RESULTS_RETURNED ...
#define LDAP_CLIENT_LOOP ...
#define LDAP_REFERRAL_LIMIT_EXCEEDED ...
#define	LDAP_X_CONNECTING ...
""")

libldap = ffi.verify("""
/* from internal ldap_log.h */
#define LDAP_DEBUG_TRACE	0x0001
#define LDAP_DEBUG_PACKETS	0x0002
#define LDAP_DEBUG_ARGS		0x0004
#define LDAP_DEBUG_CONNS	0x0008
#define LDAP_DEBUG_BER		0x0010
#define LDAP_DEBUG_FILTER	0x0020
#define LDAP_DEBUG_CONFIG	0x0040
#define LDAP_DEBUG_ACL		0x0080
#define LDAP_DEBUG_STATS	0x0100
#define LDAP_DEBUG_STATS2	0x0200
#define LDAP_DEBUG_SHELL	0x0400
#define LDAP_DEBUG_PARSE	0x0800
#define LDAP_DEBUG_SYNC		0x4000
#define LDAP_DEBUG_NONE		0x8000
#define LDAP_DEBUG_ANY		(-1)

#include <ldap.h>
""", libraries=[bytes('ldap_r')])
